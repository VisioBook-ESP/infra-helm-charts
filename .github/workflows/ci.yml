name: Helm Unit Tests

on:
  push:
  pull_request:

jobs:
  lint:
    name: 🧪 Helm Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Lint all charts
        run: |
          helm lint environnement/dev/charts/* --strict

  validate:
    name: 📄 Helm Template Validation
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Validate Helm templates
        run: |
          helm template environnement/dev/charts/*

  unittest:
    name: ✅ Helm Unit Tests
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Install helm-unittest plugin
        run: helm plugin install https://github.com/helm-unittest/helm-unittest

      - name: Run helm-unittest on all charts
        run: |
          cd environnement/dev
          helm unittest charts/*

  kubeval:
    name: 🔍 Validate Kubernetes Manifests with kubeval
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubeval
        run: |
          curl -sL https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz | tar xz
          sudo mv kubeval /usr/local/bin/

      - name: Run kubeval on Helm templates
        run: |
          for chart in environnement/dev/charts/*; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "🔍 Validating with kubeval: $chart"
              helm template "$chart" | kubeval --ignore-missing-schemas --strict
            fi
          done

  minikube:
    name: 🏗️ Deploy and Test Chart on Minikube
    runs-on: ubuntu-latest
    needs: kubeval
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          KUBECTL_VERSION="v1.30.1"
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - name: Verify kubectl installation
        run: |
          kubectl version --client

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest

      - name: Deploy nginx-test chart
        run: |
          helm upgrade --install nginx-test environnement/dev/charts/nginx-test --namespace test-ns --create-namespace

      - name: Wait for nginx-test pod to be ready
        run: |
          echo "⏳ Waiting for pod to be ready..."
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=nginx-test -n test-ns --timeout=120s

      - name: Get NodePort and curl the app
        run: |
          echo "🌐 Getting NodePort URL..."
          export NODE_PORT=$(kubectl get svc nginx-test -n test-ns -o jsonpath="{.spec.ports[0].nodePort}")
          export NODE_IP=$(kubectl get nodes -o jsonpath="{.items[0].status.addresses[0].address}")
          echo "URL: http://$NODE_IP:$NODE_PORT"
          curl -v --retry 5 --retry-delay 5 http://$NODE_IP:$NODE_PORT
      
